[{"/Users/omkar/Documents/coding/covid_19_stats/src/index.js":"1","/Users/omkar/Documents/coding/covid_19_stats/src/reportWebVitals.js":"2","/Users/omkar/Documents/coding/covid_19_stats/src/App.js":"3","/Users/omkar/Documents/coding/covid_19_stats/src/components/Header.js":"4","/Users/omkar/Documents/coding/covid_19_stats/src/components/CountryInput.js":"5","/Users/omkar/Documents/coding/covid_19_stats/src/components/CountryTiles.js":"6","/Users/omkar/Documents/coding/covid_19_stats/src/countryList.js":"7"},{"size":500,"mtime":1607791623081,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607791623082,"results":"10","hashOfConfig":"9"},{"size":1714,"mtime":1607920801418,"results":"11","hashOfConfig":"9"},{"size":321,"mtime":1607794226477,"results":"12","hashOfConfig":"9"},{"size":1244,"mtime":1607881401701,"results":"13","hashOfConfig":"9"},{"size":2387,"mtime":1616241714909,"results":"14","hashOfConfig":"9"},{"size":2406,"mtime":1607878657788,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1d2uwxl",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/omkar/Documents/coding/covid_19_stats/src/index.js",[],["33","34"],"/Users/omkar/Documents/coding/covid_19_stats/src/reportWebVitals.js",[],"/Users/omkar/Documents/coding/covid_19_stats/src/App.js",["35"],"import React, {Component} from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header\";\nimport {CountryInput} from \"./components/CountryInput\";\nimport {CountryTiles} from \"./components/CountryTiles\";\nimport Grid from '@material-ui/core/Grid';\nimport {countryCovidList} from \"./countryList\";\nimport \"./components/main.css\";\nconst _ = require('lodash');\n\n\n\n\nexport default class App extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      countryList : _.cloneDeep(countryCovidList)\n    }\n  }\n  filterData = (letters) => {\n    let countryitems = [];\n    if(letters.trim() == ''){\n      countryitems = _.cloneDeep(countryCovidList);\n    }else{\n      let countries = _.filter(countryCovidList, (ccl) => {\n        if(ccl.Country.toLowerCase().includes(letters.toLowerCase())){\n          return ccl;\n        }\n      })\n      countryitems = countries;\n    }\n    this.setState({countryList: countryitems});\n  } \n\n  render(){\n    \n    \n    return (\n      <div className=\"App\">\n        <Grid container>\n          <Grid item xs={12} >\n            <br/>\n            <Header title=\"Covid 19 status\"/>\n          </Grid>\n          <Grid item xs={12}>\n            <br/>\n            <CountryInput searchCountry={this.filterData} />\n          </Grid>\n          \n          <Grid item container spacing={2} style={{marginTop:\"20px\"}}>\n              <Grid item xs={0} sm={1}>\n  \n              </Grid>\n              <Grid item container xs={12} sm={10} spacing={2}>\n                <CountryTiles countryItems={this.state.countryList} />\n              </Grid>\n              <Grid item xs={0} sm={1}>\n  \n              </Grid>\n          </Grid>\n        </Grid>\n        \n      </div>\n    );\n  }\n  \n}\n","/Users/omkar/Documents/coding/covid_19_stats/src/components/Header.js",[],"/Users/omkar/Documents/coding/covid_19_stats/src/components/CountryInput.js",["36"],"import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n        margin: 'auto',\n        ...theme.typography.button,\n        backgroundColor: theme.palette.background.paper\n      },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    }\n  }));\n\n  export const CountryInput = (props) => {\n    const classes = useStyles();\n\n    return (\n      <Paper  className={classes.root}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Enter Country Name\"\n          inputProps={{ 'aria-label': 'Enter Country Name' }}\n          onChange={((e) => props.searchCountry(e.target.value))}\n        />\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n          <SearchIcon />\n        </IconButton>\n        \n      </Paper>\n    );\n  }","/Users/omkar/Documents/coding/covid_19_stats/src/components/CountryTiles.js",[],"/Users/omkar/Documents/coding/covid_19_stats/src/countryList.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":23,"column":23,"nodeType":"43","messageId":"44","endLine":23,"endColumn":25},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]